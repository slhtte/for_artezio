В качестве примера системы я выбрал многопользовательскую онлайн игру (например, "Танки").

Для этой системы лучшим вариантом будет двухуровневая архитектура с несколькими серверами.

Такой выбор архитектуры обусловлен тем, что большинство современных игр написано для "Толстого клиента": основная часть приложения находится на клиенте, задействуя производительные мощности его оборудывания.На сервере в осоновном хранятся только статистические данные и данные о положение игроков-противников в момент игры.

Во время запуска приложения клиент посылает запрос к диспетчеру, который связывает клиента либо с нужным "конкретным" сервером, либо с наименее загруженным.Во время сеанса игры обеспечения всего процесса боя ложится на плечи клиента, с сервера и на сервер приходят небольшие порции данных о смене местоположения игроков и прочих их действиях.
